<details>
<summary>
 Bug 1 (:red_square:): Incorrect handling of multiple file flags
</summary>


  - **Bug:** If you pass multiple `--file` flags, only the last one will be considered. The current implementation will overwrite the `files` array every time it encounters a `--file` flag.

  - **Issue:**

  ```javascript
  args.forEach((arg, index) => {
    if ((arg === '--f' || arg === '--file' || arg === '--files') && index + 1 < args.length) {
      files = files.concat(args[index + 1].split(','));
    }
  });
  ```

  - **Solution:**

  ```javascript
  args.forEach((arg, index) => {
    if ((arg === '--f' || arg === '--file' || arg === '--files') && index + 1 < args.length) {
      files = [...files, ...args[index + 1].split(',')];
    }
  });
  ```

  - **Test Cases:**

  ```javascript
  const files = getFilesFlag(['--file', 'file1,file2', '--file', 'file3']);
  expect(files).toEqual(['file1', 'file2', 'file3']);
  ```

</details>

<details>
<summary>
 Bug 2 (:red_square:): No validation for file flag argument
</summary>


  - **Bug:** There is no validation to check if the argument given with the `--file` flag is actually a file or a valid input.

  - **Issue:**

  ```javascript
  args.forEach((arg, index) => {
    if ((arg === '--f' || arg === '--file' || arg === '--files') && index + 1 < args.length) {
      files = files.concat(args[index + 1].split(','));
    }
  });
  ```

  - **Solution:**

  ```javascript
  const fs = require('fs');
  args.forEach((arg, index) => {
    if ((arg === '--f' || arg === '--file' || arg === '--files') && index + 1 < args.length) {
      const fileArgs = args[index + 1].split(',');
      fileArgs.forEach((fileArg) => {
        if (fs.existsSync(fileArg)) {
          files = [...files, fileArg];
        }
      });
    }
  });
  ```

  - **Test Cases:**

  ```javascript
  const files = getFilesFlag(['--file', 'invalidFile']);
  expect(files).toEqual([]);
  ```

</details>

<details>
<summary>
 Bug 3 (:yellow_square:): No support for `--file` flag without an argument
</summary>


  - **Bug:** If the `--file` flag is passed without an argument, the next flag (if any) is considered as its argument, which is incorrect.

  - **Issue:**

  ```javascript
  args.forEach((arg, index) => {
    if ((arg === '--f' || arg === '--file' || arg === '--files') && index + 1 < args.length) {
      files = files.concat(args[index + 1].split(','));
    }
  });
  ```

  - **Solution:**

  ```javascript
  args.forEach((arg, index) => {
    if ((arg === '--f' || arg === '--file' || arg === '--files') && index + 1 < args.length && !args[index + 1].startsWith('--')) {
      files = [...files, ...args[index + 1].split(',')];
    }
  });
  ```

  - **Test Cases:**

  ```javascript
  const files = getFilesFlag(['--file', '--anotherFlag']);
  expect(files).toEqual([]);
  ```

</details>
